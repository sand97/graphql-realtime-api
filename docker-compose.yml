version: '3.7'

services:
  main:
    container_name: main
#    image: emergency_main:latest
    build:
      context: .
      target: development
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - 3008:3000
    restart: always
    command: npm run start:dev
#    kill -9 $(fuser -f 3000/tcp);
    env_file:
      - .env
    networks:
      - webnet
    depends_on:
      - redis
      - minio
      - postgres
  redis:
    container_name: redis
    image: redis:5
    env_file:
      - .env
    command: [
      "redis-server",
      "--bind",
      "redis",
      "--port",
      "6379"
    ]
    ports:
      - '${REDIS_PORT}:${REDIS_PORT}'
    volumes:
      - red_data:/var/lib/redis
    networks:
      - webnet

  postgres:
    container_name: postgres
    image: postgres:12
    networks:
      - webnet
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DATABASE}
      PG_DATA: /var/lib/postgresql/data
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    volumes:
      - postgres_data:/var/lib/postgresql/data

  minio:
    container_name: minio
    image: minio/minio
    volumes:
      - /Users/new/Documents/project/mboafashion/data/minio:/data
    networks:
      webnet:
        ipv4_address: 172.18.0.50
    ports:
      - ${MINIO_PORT}:${MINIO_PORT}
      - ${MINIO_CONSOLE_PORT}:${MINIO_CONSOLE_PORT}
      - 42891:42891
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY}
    command: ["server", "--console-address", ":9001", "/data"]

networks:
  webnet:
    ipam:
      config:
        - subnet: 172.18.0.0/16
volumes:
  red_data: { }
  postgres_data: